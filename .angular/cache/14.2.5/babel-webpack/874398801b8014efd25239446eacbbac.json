{"ast":null,"code":"import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\nconst _c0 = [\"body\"];\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\n\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\n\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\n\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\n\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\n\nconst matExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n\nclass MatExpansionPanelContent {\n  constructor(_template) {\n    this._template = _template;\n  }\n\n}\n\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n\nMatExpansionPanelContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Counter for generating unique element ids. */\n\n\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\n\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n\nclass MatExpansionPanel extends CdkAccordionItem {\n  constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this._viewContainerRef = _viewContainerRef;\n    this._animationMode = _animationMode;\n    this._hideToggle = false;\n    /** An event emitted after the body's expansion animation happens. */\n\n    this.afterExpand = new EventEmitter();\n    /** An event emitted after the body's collapse animation happens. */\n\n    this.afterCollapse = new EventEmitter();\n    /** Stream that emits for changes in `@Input` properties. */\n\n    this._inputChanges = new Subject();\n    /** ID for the associated header element. Used for a11y labelling. */\n\n    this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n    /** Stream of body animation done events. */\n\n    this._bodyAnimationDone = new Subject();\n    this.accordion = accordion;\n    this._document = _document; // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n      }\n    });\n\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n  /** Whether the toggle indicator should be hidden. */\n\n\n  get hideToggle() {\n    return this._hideToggle || this.accordion && this.accordion.hideToggle;\n  }\n\n  set hideToggle(value) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n  /** The position of the expansion indicator. */\n\n\n  get togglePosition() {\n    return this._togglePosition || this.accordion && this.accordion.togglePosition;\n  }\n\n  set togglePosition(value) {\n    this._togglePosition = value;\n  }\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\n\n\n  _hasSpacing() {\n    if (this.accordion) {\n      return this.expanded && this.accordion.displayMode === 'default';\n    }\n\n    return false;\n  }\n  /** Gets the expanded state string. */\n\n\n  _getExpandedState() {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n  /** Toggles the expanded state of the expansion panel. */\n\n\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n  /** Sets the expanded state of the expansion panel to false. */\n\n\n  close() {\n    this.expanded = false;\n  }\n  /** Sets the expanded state of the expansion panel to true. */\n\n\n  open() {\n    this.expanded = true;\n  }\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n\n  ngOnChanges(changes) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._bodyAnimationDone.complete();\n\n    this._inputChanges.complete();\n  }\n  /** Checks whether the expansion panel's content contains the currently-focused element. */\n\n\n  _containsFocus() {\n    if (this._body) {\n      const focusedElement = this._document.activeElement;\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n\n    return false;\n  }\n\n}\n\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n};\n\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 6,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\",\n    togglePosition: \"togglePosition\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\",\n    afterExpand: \"afterExpand\",\n    afterCollapse: \"afterCollapse\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MAT_ACCORDION,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimationDone.next($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  dependencies: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n\nMatExpansionPanel.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [MAT_ACCORDION]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n  }, {\n    type: Optional\n  }]\n}];\n\nMatExpansionPanel.propDecorators = {\n  hideToggle: [{\n    type: Input\n  }],\n  togglePosition: [{\n    type: Input\n  }],\n  afterExpand: [{\n    type: Output\n  }],\n  afterCollapse: [{\n    type: Output\n  }],\n  _lazyContent: [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }],\n  _body: [{\n    type: ViewChild,\n    args: ['body']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [MAT_ACCORDION]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    togglePosition: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\n\n\nclass MatExpansionPanelActionRow {}\n\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\n\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n\n/** @docs-private */\n\n\nclass MatExpansionPanelHeaderBase {}\n\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\n\n\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n  constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n    super();\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    this._parentChangeSubscription = Subscription.EMPTY;\n    const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) : EMPTY;\n    this.tabIndex = parseInt(tabIndex || '') || 0; // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n      return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n    }))).subscribe(() => this._changeDetectorRef.markForCheck()); // Avoids focus being lost if the panel contained the focused element and was closed.\n\n    panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * @docs-private\n   */\n\n\n  get disabled() {\n    return this.panel.disabled;\n  }\n  /** Toggles the expanded state of the panel. */\n\n\n  _toggle() {\n    if (!this.disabled) {\n      this.panel.toggle();\n    }\n  }\n  /** Gets whether the panel is expanded. */\n\n\n  _isExpanded() {\n    return this.panel.expanded;\n  }\n  /** Gets the expanded state string of the panel. */\n\n\n  _getExpandedState() {\n    return this.panel._getExpandedState();\n  }\n  /** Gets the panel id. */\n\n\n  _getPanelId() {\n    return this.panel.id;\n  }\n  /** Gets the toggle position for the header. */\n\n\n  _getTogglePosition() {\n    return this.panel.togglePosition;\n  }\n  /** Gets whether the expand indicator should be shown. */\n\n\n  _showToggle() {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n  /**\n   * Gets the current height of the header. Null if no custom height has been\n   * specified, and if the default height from the stylesheet should be used.\n   */\n\n\n  _getHeaderHeight() {\n    const isExpanded = this._isExpanded();\n\n    if (isExpanded && this.expandedHeight) {\n      return this.expandedHeight;\n    } else if (!isExpanded && this.collapsedHeight) {\n      return this.collapsedHeight;\n    }\n\n    return null;\n  }\n  /** Handle keydown event calling to toggle() if appropriate. */\n\n\n  _keydown(event) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n\n          this._toggle();\n        }\n\n        break;\n\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * @param origin Origin of the action that triggered the focus.\n   * @docs-private\n   */\n\n\n  focus(origin, options) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._element).subscribe(origin => {\n      if (origin && this.panel.accordion) {\n        this.panel.accordion._handleHeaderFocus(this);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n\n}\n\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n};\n\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"],\n  hostVars: 15,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  dependencies: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate]\n  },\n  changeDetection: 0\n});\n\nMatExpansionPanelHeader.ctorParameters = () => [{\n  type: MatExpansionPanel,\n  decorators: [{\n    type: Host\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n  }, {\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}];\n\nMatExpansionPanelHeader.propDecorators = {\n  expandedHeight: [{\n    type: Input\n  }],\n  collapsedHeight: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['tabIndex'],\n      animations: [matExpansionAnimations.indicatorRotate],\n      host: {\n        'class': 'mat-expansion-panel-header mat-focus-indicator',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[style.height]': '_getHeaderHeight()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)'\n      },\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\n\n\nclass MatExpansionPanelDescription {}\n\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\n\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\n\n\nclass MatExpansionPanelTitle {}\n\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\n\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directive for a Material Design Accordion.\n */\n\n\nclass MatAccordion extends CdkAccordion {\n  constructor() {\n    super(...arguments);\n    /** Headers belonging to this accordion. */\n\n    this._ownHeaders = new QueryList();\n    this._hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n\n    this.displayMode = 'default';\n    /** The position of the expansion indicator. */\n\n    this.togglePosition = 'after';\n  }\n  /** Whether the expansion indicator should be hidden. */\n\n\n  get hideToggle() {\n    return this._hideToggle;\n  }\n\n  set hideToggle(show) {\n    this._hideToggle = coerceBooleanProperty(show);\n  }\n\n  ngAfterContentInit() {\n    this._headers.changes.pipe(startWith(this._headers)).subscribe(headers => {\n      this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n\n      this._ownHeaders.notifyOnChanges();\n    });\n\n    this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n  }\n  /** Handles keyboard events coming in from the panel headers. */\n\n\n  _handleHeaderKeydown(event) {\n    this._keyManager.onKeydown(event);\n  }\n\n  _handleHeaderFocus(header) {\n    this._keyManager.updateActiveItem(header);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._ownHeaders.destroy();\n  }\n\n}\n\nMatAccordion.ɵfac = /*@__PURE__*/function () {\n  let ɵMatAccordion_BaseFactory;\n  return function MatAccordion_Factory(t) {\n    return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n  };\n}();\n\nMatAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-accordion\"],\n  hostVars: 2,\n  hostBindings: function MatAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    }\n  },\n  inputs: {\n    multi: \"multi\",\n    displayMode: \"displayMode\",\n    togglePosition: \"togglePosition\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatAccordion.propDecorators = {\n  _headers: [{\n    type: ContentChildren,\n    args: [MatExpansionPanelHeader, {\n      descendants: true\n    }]\n  }],\n  hideToggle: [{\n    type: Input\n  }],\n  displayMode: [{\n    type: Input\n  }],\n  togglePosition: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      inputs: ['multi'],\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if multiple panel support is enabled.\n        '[class.mat-accordion-multi]': 'this.multi'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    togglePosition: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatExpansionModule {}\n\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\n\nMatExpansionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };","map":{"version":3,"names":["CdkAccordionItem","CdkAccordion","CdkAccordionModule","TemplatePortal","PortalModule","DOCUMENT","CommonModule","InjectionToken","Directive","TemplateRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","SkipSelf","Inject","ChangeDetectorRef","ViewContainerRef","Input","Output","ContentChild","ViewChild","Host","ElementRef","Attribute","QueryList","ContentChildren","NgModule","mixinTabIndex","MatCommonModule","coerceBooleanProperty","FocusMonitor","FocusKeyManager","distinctUntilChanged","startWith","filter","take","ENTER","hasModifierKey","SPACE","ANIMATION_MODULE_TYPE","Subject","Subscription","EMPTY","merge","trigger","state","style","transition","animate","UniqueSelectionDispatcher","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","constructor","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","subscribe","event","emit","hideToggle","value","togglePosition","_togglePosition","_hasSpacing","expanded","displayMode","toggle","close","open","ngAfterContentInit","_lazyContent","opened","_portal","ngOnChanges","changes","next","ngOnDestroy","complete","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","inputs","disabled","outputs","closed","expandedChange","exportAs","features","ɵɵProvidersFeature","provide","useValue","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","dependencies","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeaderBase","_MatExpansionPanelHeaderMixinBase","MatExpansionPanelHeader","panel","_element","_focusMonitor","tabIndex","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","parseInt","markForCheck","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","origin","options","ngAfterViewInit","monitor","_handleHeaderFocus","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","ɵɵinjectAttribute","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵstyleProp","MatExpansionPanelHeader_Template","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","destroy","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["D:/Angular projects/Full Stack Project/fullStackProject/node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js"],"sourcesContent":["import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, dependencies: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ], host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                }, styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n/** @docs-private */\nclass MatExpansionPanelHeaderBase {\n}\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        super();\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { tabIndex: \"tabIndex\", expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, dependencies: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel-header', template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['tabIndex'], animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ], host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                }, styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"] }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}